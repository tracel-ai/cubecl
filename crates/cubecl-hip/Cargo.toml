[package]
authors = ["nathanielsimard <nathaniel.simard.42@gmail.com>"]
categories = ["science"]
description = "AMD ROCm HIP runtime for CubeCL"
edition.workspace = true
keywords = ["gpu", "amd", "rocm", "hip"]
license.workspace = true
name = "cubecl-hip"
readme.workspace = true
repository = "https://github.com/tracel-ai/cubecl/tree/main/crates/cubecl-hip"
version.workspace = true

[features]
default = [
    "cubecl-runtime/default",
    "cubecl-common/default",
    "cubecl-core/default",
]
std = ["cubecl-runtime/std", "cubecl-common/std", "cubecl-core/std"]
rocwmma = []
compilation-cache = ["cubecl-common/cache", "serde"]

matmul_tests_unit = ["cubecl-matmul/matmul_tests_unit"]
matmul_tests_plane = ["cubecl-matmul/matmul_tests_plane"]
matmul_tests_tma = ["cubecl-matmul/matmul_tests_tma"]
matmul_tests_double = ["cubecl-matmul/matmul_tests_double"]
matmul_tests_simple = ["cubecl-matmul/matmul_tests_simple"]
matmul_tests_ordered = ["cubecl-matmul/matmul_tests_ordered"]
matmul_tests_cyclic = ["cubecl-matmul/matmul_tests_cyclic"]
matmul_tests_strided = ["cubecl-matmul/matmul_tests_strided"]
matmul_tests_tilewise = ["cubecl-matmul/matmul_tests_tilewise"]
matmul_tests_hybrid = ["cubecl-matmul/matmul_tests_hybrid"]
matmul_tests_barrier = ["cubecl-matmul/matmul_tests_barrier"]
matmul_tests_specialized = ["cubecl-matmul/matmul_tests_specialized"]
matmul_tests_f16 = ["cubecl-matmul/matmul_tests_f16"]
matmul_tests_f32 = ["cubecl-matmul/matmul_tests_f32"]
matmul_tests_layouts = ["cubecl-matmul/matmul_tests_layouts"]
matmul_tests_alt_shapes = ["cubecl-matmul/matmul_tests_alt_shapes"]
matmul_tests_partition_buffering = [
    "cubecl-matmul/matmul_tests_partition_buffering",
]
matmul_tests_hypercube = ["cubecl-matmul/matmul_tests_hypercube"]
matmul_tests_base = [
    "matmul_tests_plane",
    "matmul_tests_double",
    "matmul_tests_simple",
    "matmul_tests_ordered",
    "matmul_tests_cyclic",
    "matmul_tests_f16",
]
matmul_tests_all = [
    "matmul_tests_unit",
    "matmul_tests_plane",
    "matmul_tests_tma",
    "matmul_tests_double",
    "matmul_tests_simple",
    "matmul_tests_ordered",
    "matmul_tests_cyclic",
    "matmul_tests_strided",
    "matmul_tests_tilewise",
    "matmul_tests_hybrid",
    "matmul_tests_barrier",
    "matmul_tests_specialized",
    "matmul_tests_f16",
    "matmul_tests_f32",
    "matmul_tests_layouts",
    "matmul_tests_alt_shapes",
    "matmul_tests_partition_buffering",
    "matmul_tests_hypercube",
]
conv_tests = ["cubecl-convolution/conv_tests"]

[dependencies]
cubecl-common = { path = "../cubecl-common", version = "0.7.0" }
cubecl-core = { path = "../cubecl-core", version = "0.7.0", default-features = false }
cubecl-cpp = { path = "../cubecl-cpp", version = "0.7.0", default-features = false, features = [
    "hip",
] }
cubecl-runtime = { path = "../cubecl-runtime", version = "0.7.0", default-features = false, features = [
    "channel-mutex",
] }
cubecl-hip-sys = { version = "6.4.4348201" }

bytemuck = { workspace = true }

derive-new = { workspace = true }
half = { workspace = true }
log = { workspace = true }
paste = { workspace = true }
serde = { workspace = true, optional = true }

[dev-dependencies]
cubecl-core = { path = "../cubecl-core", version = "0.7.0", features = [
    "export_tests",
] }
cubecl-std = { path = "../cubecl-std", version = "0.7.0", features = [
    "export_tests",
] }
cubecl-matmul = { path = "../cubecl-matmul", version = "0.7.0", features = [
    "export_tests",
] }
cubecl-convolution = { path = "../cubecl-convolution", version = "0.7.0", features = [
    "export_tests",
] }
cubecl-reduce = { path = "../cubecl-reduce", version = "0.7.0", features = [
    "export_tests",
] }
cubecl-random = { path = "../cubecl-random", version = "0.7.0", features = [
    "export_tests",
] }
pretty_assertions = { workspace = true }
